To compile: javac -cp rd881.jar *.java 
To run: java -jar rd881.jar

1a) We implemented this by allowing the vacuum to be one of the potential actions in it. Later on in the project we will add utility to having it off when bugs arent around.

1b) We modified the potential actions array by doubling its size and setting every 2nd item to be the direction on half power. 

1c) We let both agents run through all of their resouces and compared the results. Our agent captured 69 amount of bugs and 51 amount escaped. 
Whereas the original agent captured 81 amount of bugs and 49 amount escaped. Although the original agent caught more bugs it ran through its resources much more quickly than our agent.
This can easily get into an sensitivity vs specifity argument since our agent let more bugs escape but was more conservative with its resources. The original agent caught 
more bugs but ran through its resources quickly.

1d)I modified the reward function by adding a 3 parameters to incentivise suction if there is a bug, desentivize not activating suction
when there is a bug, and different rewards on cpature of a bug for using lower settings to preserve resources. We only used settings 2 and 4 to make things simpler to impliment
I added the 1 and 3 functionality just in case we change it in the future. Also the inscentives are all slightly different to make the tie algorithm easier to impliment in the future. 

2a)To break the ties I made a function that stored the previous state and current state, checked it for utility/insentive it then proked the continue to keep the process so long as the 
world status hasnt updated. I also had a function for randomly continuing  based on the raandom double library element in java

2b) This section is covered by the work done in 1d. Passive reinforcement learning was used by changing the reward function which changes the way our AI learned to help it be more effective. 

3a) We implemented some if-statements in step so that if the vacuum succesfully sucked in an insect at a power, then the adjacent directions would also then gain utility.
The utility for adjacent directions is always half that of the direction the vacuum was at. 

3b) This has been partially accomplished by previous sections. We early on implemented a way to value turning off the vacuum when no insects are nearby, by increasing utility when power is off and no insects are nearby.
To avoid the utility of being off being too high, it is lowered if insects are nearby and its off. Furthermore, we use cellcontents better in our implementation of 2, 
by having it so we grab the entire cellcontents array of a state, we can assign utility to actions based on whether bugs are there, and depending on the kind of bug.






Performance Metrics
1-ab
Time (ms)	Resources	Captured	Escaped
5045	4967	0	0
10119	4903	0	0
15189	4846	1	3
20234	4782	2	3
25255	4720	3	5
30360	4672	5	5
35414	4616	6	5
40425	4544	7	9
45511	4479	7	9
50547	4433	7	9
55648	4373	7	9
60698	4305	8	12
65709	4241	13	12
70760	4190	13	13
75788	4132	13	14
80818	4062	14	18
85848	3996	16	18
90876	3928	16	19
95903	3862	18	20
100931	3809	18	22
105956	3749	18	22
110982	3677	19	24
116020	3611	22	24
121053	3549	23	25
126074	3495	25	25
131107	3439	25	27
136138	3378	25	27
141161	3316	26	30
146182	3274	28	30
151210	3222	29	31
156240	3166	32	31
161268	3110	32	32
166296	3053	33	32
171322	2999	35	33
176352	2937	35	33
181375	2879	39	35
186407	2823	39	37
191435	2771	39	37
196464	2702	43	37
201491	2640	46	37
206523	2586	47	37
211549	2522	51	37
216579	2458	55	37
221605	2410	58	37
226634	2373	58	37
231660	2315	62	38
236683	2251	62	38
241710	2183	66	38
246739	2123	69	38
251770	2069	69	38
256795	2024	73	39
261826	1970	73	39
266852	1910	76	40
271875	1844	77	40
276899	1782	78	42
281927	1734	82	42
286954	1670	82	42
291977	1611	85	43
297004	1551	86	43
302034	1495	88	44
307058	1423	91	45
312080	1351	94	45
317107	1287	95	45
322137	1220	96	46
327160	1156	99	47
332189	1108	99	49
337220	1044	99	49
342244	982	102	50
347268	928	104	50
352294	861	104	51
357323	801	108	51
362342	743	108	52
367367	689	108	52
372397	621	110	54
377426	565	111	54
382455	498	112	54
387479	434	114	54
392509	380	114	58
397536	308	118	58
402560	250	120	58
407597	192	121	58
412626	136	124	59
417649	81	124	60
422677	31	124	60


2-ab
Time (ms)	Resources	Captured	Escaped
5150	4993	0	0
10296	4959	0	0
15334	4924	0	0
20371	4890	0	0
25408	4856	0	0
30442	4822	0	4
35481	4788	0	4
40525	4753	0	4
45569	4719	0	4
50606	4685	0	8
55641	4651	0	8
60677	4617	0	8
65716	4582	0	13
70751	4548	0	13
75784	4514	0	13
80819	4480	0	18
85856	4446	0	18
90892	4412	0	18
95928	4377	0	18
100963	4343	0	18
106004	4309	0	23
111047	4275	1	27
116088	4241	1	27
121129	4206	1	27
126171	4172	2	32
131209	4138	2	38
136249	4098	2	38
141288	4064	2	38
146329	4029	2	38
151371	3995	2	44
156406	3961	2	44
161445	3927	2	45
166481	3893	2	49
171519	3858	2	50
176555	3824	2	51
181594	3790	2	51
186633	3756	2	53
191673	3722	2	58
196707	3687	2	58
201757	3653	2	63
206794	3619	2	63
211836	3585	2	63
216873	3551	3	64
221914	3516	3	68
226956	3482	3	73
231994	3448	3	73
237029	3414	3	73
242063	3380	3	74
247102	3346	3	75
252136	3311	3	80
257170	3277	3	81
262206	3243	3	85
267248	3209	3	86
272291	3175	3	86
277330	3140	3	90
282366	3106	3	90
287402	3072	3	95
292440	3038	3	95
297476	3004	3	96
302525	2963	3	99
307564	2929	3	105
312602	2895	3	105
317642	2861	3	109
322681	2827	3	111
327721	2792	3	111
332759	2758	3	111
337799	2724	3	111
342836	2690	3	116
347875	2656	3	116
352923	2621	3	120
357959	2587	3	123
362997	2553	3	124
368032	2519	3	124
373076	2485	3	128
378117	2450	3	133
383161	2416	3	133
388201	2382	3	136
393239	2348	3	141
398276	2314	3	142
403317	2280	3	146
408357	2245	3	146
413396	2211	3	147
418439	2177	3	147
423478	2143	3	152
428523	2109	3	154
433562	2074	3	159
438597	2040	3	159
443636	2006	3	160
448678	1972	3	160
453710	1938	4	164
458747	1897	4	164
463782	1863	4	164
468819	1829	4	164
473861	1795	4	168
478903	1761	4	170
483940	1726	4	171
488977	1692	4	171
494010	1658	4	176
499052	1624	4	176
504095	1590	4	180
509129	1555	5	180
514165	1521	5	180
519200	1487	5	183
524236	1453	5	188
529271	1419	5	189
534307	1384	5	193
539342	1350	5	193
544376	1316	5	193
549419	1282	5	194
554455	1248	5	194
559499	1214	5	198
564540	1179	5	202
569585	1145	5	202
574625	1111	5	203
579662	1077	5	209
584699	1043	5	214
589741	1008	5	215
594792	974	5	217
599835	940	5	221
604873	906	5	221
609923	872	6	222
614962	831	6	226
620000	797	6	226
625038	763	6	227
630082	729	6	232
635185	695	6	241
640249	661	6	243
645316	626	6	247
650379	592	6	247
655399	560	6	253
660433	508	7	254
665457	456	7	254
670476	432	7	254
675496	403	7	259
680546	353	8	260
685569	305	9	263
690607	241	9	263
695635	183	10	263
700671	129	10	265
705704	66	11	269
710740	12	12	270


3-a
Time (ms)	Resources	Captured	Escaped
5174	4997	0	0
10322	4941	1	0
15401	4868	1	2
20476	4800	5	3
25537	4728	5	3
30560	4660	6	3
35583	4606	6	3
40603	4540	7	8
45633	4487	10	8
50675	4435	11	8
55694	4369	11	8
60722	4295	11	10
65750	4235	12	10
70772	4173	12	13
75795	4102	16	16
80819	4034	16	16
85839	3970	17	16
90861	3904	18	16
95879	3854	19	18
100901	3792	23	19
105959	3744	24	20
111054	3681	24	20
116089	3635	24	20
121130	3579	24	20
126167	3513	24	20
131207	3441	24	20
136247	3390	25	20
141284	3336	25	22
146330	3280	25	22
151368	3220	26	23
156409	3154	27	24
161448	3093	27	24
166495	3025	29	27
171540	2965	29	33
176579	2903	29	34
181619	2845	29	34
186666	2778	31	35
191702	2706	33	35
196743	2648	34	36
201784	2584	34	36
206826	2526	34	37
211869	2467	34	37
216915	2401	36	39
221958	2333	39	43
227000	2265	39	43
232041	2193	39	44
237085	2132	39	44
242130	2068	39	44
247177	2008	40	44
252223	1946	42	49
257272	1886	42	51
262312	1839	42	51
267362	1773	42	52
272403	1717	43	53
277449	1639	43	54
282490	1577	44	56
287530	1502	44	56
292575	1430	44	58
297618	1358	44	58
302660	1284	47	62
307702	1204	47	63
312752	1139	51	64
317798	1083	51	64
322837	1021	51	64
327882	951	51	64
332925	889	54	65
337968	812	54	65
343007	760	56	69
348046	690	57	71
353091	622	57	71
358133	568	57	71
363177	501	58	72
368224	447	59	74
373266	381	62	75
378309	309	62	77
383353	241	62	77
388395	177	64	77
393445	108	66	77
398490	38	69	79
